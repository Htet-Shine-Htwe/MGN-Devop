version: '3.9'

services:
  radian-db:
    build:
      context: .
      dockerfile: ./deployment/dockerFile/Dockerfile.postgres
    deploy:
      placement:
        constraints:
          - "node.labels.db == true"
    container_name: radian-db
    volumes:
      - ./docker/data/postgres:/var/lib/postgresql/data
      - ./docker/config/postgres:/etc/postgresql
    restart: always
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-mgn}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-user}"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - mgn-network

  radian-redis:
    image: redis:alpine
    container_name: radian-redis
    deploy:
      placement:
        constraints:
          - "node.labels.db == true"
    restart: always
    volumes:
      - ./docker/data/redis:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redispassword}
      REDIS_MAXMEMORY_POLICY: "volatile-lru"
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD:-redispassword}"]
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - mgn-network

volumes:
  mgn-data:
    driver: local
  mgn-redis-data:
    driver: local

networks:
  mgn-network:
    driver: bridge
